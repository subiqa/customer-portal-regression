import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://pnccustomerdev.b2clogin.com/pnccustomerdev.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1A_SIGNUP_SIGNIN&client_id=e0ba9a00-d8e2-450a-915c-c6849c825838&nonce=defaultNonce&redirect_uri=https%3A%2F%2Ftest.customer.pioneercredit.com.au&scope=openid&response_type=id_token&prompt=login&response_mode=query');
  await page.getByRole('link', { name: 'Sign up now' }).click();
  await expect(page.getByRole('heading', { name: 'Set up your account' })).toBeVisible();
  await expect(page.getByText('Customer Number')).toBeVisible();
  await expect(page.getByPlaceholder('Customer Number')).toBeVisible();
  await expect(page.getByText('Date of Birth')).toBeVisible();
  await expect(page.getByLabel('Day')).toBeVisible();
  await expect(page.getByLabel('Month')).toBeVisible();
  await expect(page.getByLabel('Year')).toBeVisible();
  await expect(page.getByLabel('Next')).toBeVisible();
  await expect(page.getByLabel('Cancel')).toBeVisible();
  await expect(page.getByLabel('Launch chat button')).toBeVisible();
  await page.getByPlaceholder('Customer Number').click();
  await page.getByPlaceholder('Customer Number').fill('1018623 ');
  await page.getByLabel('Day').selectOption('24');
  await page.getByLabel('Month').selectOption('9');
  await page.getByLabel('Year').selectOption('1993');
  await page.getByLabel('Next').click();
  await page.getByPlaceholder('Customer Number').fill('1018623');
  await page.getByLabel('Next').click();
  await expect(page.getByRole('heading', { name: 'Verify your account' })).toBeVisible();
  await expect(page.getByLabel('Launch chat button')).toBeVisible();
  await page.getByLabel('Send code').click();
  await expect(page.getByLabel('Launch chat button')).toBeVisible();
  await page.getByPlaceholder('Verification code').click();
  await page.getByPlaceholder('Verification code').fill('122428');
  await page.getByLabel('Verify code').click();
  await expect(page.getByRole('heading', { name: 'Set your password' })).toBeVisible();
  await expect(page.getByText('Your password must:')).toBeVisible();
  await expect(page.getByText('Be at least 8 characters long')).toBeVisible();
  await expect(page.getByText('Include both uppercase (A-Z)')).toBeVisible();
  await expect(page.getByText('Contain at least one number (')).toBeVisible();
  await expect(page.getByText('New Password', { exact: true })).toBeVisible();
  await expect(page.getByPlaceholder('New Password', { exact: true })).toBeVisible();
  await expect(page.getByText('Confirm New Password')).toBeVisible();
  await expect(page.getByPlaceholder('Confirm New Password')).toBeVisible();
  await expect(page.getByLabel('Create')).toBeVisible();
  await expect(page.getByLabel('Cancel')).toBeVisible();
  await expect(page.getByLabel('Launch chat button')).toBeVisible();
  await page.getByLabel('Create').click();
  await expect(page.locator('div').filter({ hasText: /^New PasswordThis information is required\.What is this\?$/ }).getByRole('alert')).toBeVisible();
  await expect(page.locator('li').filter({ hasText: 'Confirm New PasswordThis' }).getByRole('alert')).toBeVisible();
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).fill('Banana01');
  await page.getByLabel('Create').click();
  await expect(page.getByText('The password entry fields do')).toBeVisible();
  await expect(page.getByText('This information is required.')).toBeVisible();
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).press('ControlOrMeta+a');
  await page.getByPlaceholder('New Password', { exact: true }).fill('');
  await page.getByPlaceholder('Confirm New Password').click();
  await page.getByPlaceholder('Confirm New Password').fill('Banana01');
  await page.getByLabel('Create').click();
  await expect(page.getByText('The password entry fields do')).toBeVisible();
  await expect(page.getByText('This information is required.')).toBeVisible();
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).fill('banana011');
  await page.getByLabel('Create').click();
  await expect(page.getByText('The password entry fields do')).toBeVisible();
  await page.getByPlaceholder('Confirm New Password').click();
  await page.getByPlaceholder('Confirm New Password').press('ControlOrMeta+a');
  await page.getByPlaceholder('Confirm New Password').fill('Banana01');
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).press('ControlOrMeta+a');
  await page.getByPlaceholder('New Password', { exact: true }).fill('banana');
  await page.getByLabel('Create').click();
  await expect(page.getByText('Password doesn\'t meet the')).toBeVisible();
  await page.getByPlaceholder('Confirm New Password').click();
  await page.getByPlaceholder('Confirm New Password').press('ControlOrMeta+a');
  await page.getByPlaceholder('Confirm New Password').fill('banana');
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).press('ControlOrMeta+a');
  await page.getByPlaceholder('New Password', { exact: true }).fill('Banana01');
  await page.getByLabel('Create').click();
  await expect(page.getByText('The password entry fields do')).toBeVisible();
  await expect(page.getByText('Password doesn\'t meet the')).toBeVisible();
  await page.getByPlaceholder('New Password', { exact: true }).click();
  await page.getByPlaceholder('New Password', { exact: true }).press('ControlOrMeta+a');
  await page.getByPlaceholder('New Password', { exact: true }).fill('Banana01');
  await page.getByPlaceholder('Confirm New Password').click();
  await page.getByPlaceholder('Confirm New Password').press('ControlOrMeta+a');
  await page.getByPlaceholder('Confirm New Password').fill('Banana01');
  await page.getByLabel('Create').click();
  await expect(page.getByText('It looks like you\'re already')).toBeVisible();
  await page.getByLabel('Cancel').click();
  await expect(page.getByRole('heading', { name: 'Login to your account' })).toBeVisible();
});